#!/usr/bin/env bash

set -o pipefail

if [ "$1" == "" ]; then
  cat <<EOF
USAGE: $(basename $0) WHAT

This script will install the software WHAT in the latest release version.

WHAT regocnizes anything in github's USER/REPO format, and also those
short forms:

  - joe
  - helmsman
  - kops
  - pack
  - rancher

EOF
  exit -1
fi

WHAT="$1"
TDIR="$HOME/bin"

SRCFILE=""
case $WHAT in
  calicoctl)    REPO="projectcalico/calicoctl" ;;
  helmsman)     REPO="Praqma/helmsman" ;;
  kops)         REPO="kubernetes/kops" ;;
  rancher)      REPO="rancher/cli" ;;
  joe)          REPO="karan/joe" ;;
  pack)         REPO="buildpack/pack" ;;
  *)
    if echo $WHAT | grep -q / ; then
      REPO="$WHAT"
      WHAT=$(echo $WHAT | cut -d/ -f2)
    else
      echo "ERROR: don't recognize short form '$WHAT'!"
      exit
    fi
    ;;
esac

# determine mac vs. linux
ST=$(uname | tr '[[:upper:]]' '[[:lower:]]')
[ "$ST" == "darwin" ] && GREP_ST="(macos|darwin)" || GREP_ST="$ST"

# get download url from github
URL=$(curl --fail -s "https://api.github.com/repos/$REPO/releases" \
  | grep browser_download \
  | awk '{print $2}' \
  | grep -E $GREP_ST \
  | grep -Ev '/v?[^/]+(-rc|-alpha|-beta)[^/]*/' \
  | grep -Ev -- '-(sha[0-9]*|md5)' \
  | tr -d \" \
  | sort -V | tail -n1)

if [ ! "$?" == "0" -o -z "$URL" ] ; then
  echo "Unable to determine download URL for $REPO. Exiting."
  exit -1
fi

VERSION=$(echo $URL | sed -Ee 's%.+/download/v?([^/]+)/.+%\1%g')
echo Found latest stable version "$VERSION".

# determine decompression ONLY
_UNTAR="tar -xf -"
UNPACK="cat"
UNTAR=""
case $URL in

  # tar AND compression

  *.tb2 | *.tar.bz2)
    UNPACK="bunzip2 -dc"
    UNTAR=$_UNTAR
    ;;
  *.txz | *.tar.xz)
    UNPACK="xz -dc -"
    UNTAR=$_UNTAR
    ;;
  *.tgz | *.tar.gz)
    UNPACK="gunzip -dc -"
    UNTAR=$_UNTAR
    ;;

  # now decompress ONLY

  *.bz2)
    UNPACK="bunzip2 -dc -"
    ;;
  *.gz)
    UNPACK="gunzip -dc -"
    ;;
  *.xz)
    UNPACK="xz -dc -"
    ;;

esac

# finally start.

mkdir -p "$TDIR"

# always the same :)
FINAL_NAME="$WHAT-$VERSION"
LINK_NAME="$WHAT"

if [ -f "$TDIR/$FINAL_NAME" ]; then

  echo "File seems to exist, exiting."

else

  if [[ -z "$UNTAR" ]] ; then

    cd "$TDIR"
    curl --fail -#L "$URL" | $UNPACK > "$FINAL_NAME"
    if [ ! "$?" == "0" ] ; then
      echo "ERROR: Unable to download '$URL'. Exiting."
      exit -1
    fi

  else

    TMP=$(mktemp -d)
    cd "$TMP"
    curl --fail -#L "$URL" | $UNPACK | $UNTAR
    if [ ! "$?" == "0" ] ; then
      echo "ERROR: Unable to download '$URL'. Exiting."
      exit -1
    fi

    # magic - use the "largest file" as binary :)
    SRCFILE=$(ls -S | head -n1)
    echo "found unpacked binary '$SRCFILE'"

    cd "$TDIR"
    mv "$TMP/$SRCFILE" "./$FINAL_NAME"
    rm -rf "$TMP"

  fi

  if [ -f "$FINAL_NAME" ] ; then
    chmod a+x "$FINAL_NAME"
    ln -sf "./$FINAL_NAME" "$HOME/bin/$LINK_NAME"
  fi

  echo "Done."

fi
