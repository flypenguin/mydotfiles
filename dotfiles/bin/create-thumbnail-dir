#!/usr/bin/env bash


if [ -z "$1" ] ; then
  echo "USAGE: $(basename $0) TARGETDIR"
  echo "    - create TARGETDIR_thumbs_TIMESTAMP directory with thumbnail"
  echo "      images and videos from TARGETDIR"
  exit -1
elif [ ! -d "$1" ] ; then
  echo "ERROR: not a directory: $1"
  exit -2
fi

eerr() {
  echo -en "$@" >&2;
}

CONVERT_QUALITY=${CONVERT_QUALITY:-65}
CONVERT_RESIZE=${CONVERT_RESIZE:-1920x1080}
CONVERT_OUTPUT_FORMAT="webp"
# apple preview: see here: https://is.gd/oeaCF6
# h265 logging output: https://stackoverflow.com/a/71746426/902327
FFMPEG_OUTPUT_CODEC="libx265 -x265-params log-level=none -tag:v hvc1"
FFMPEG_SCALE_SIZE=${FFMPEG_SCALE_SIZE:-360}

export SRC_DIR="$1"
export TGT_DIR="$PWD/$(basename "$SRC_DIR").thumbs"
export TS=$(date +%Y%m%d.%H%M%S)

rm -rf "$TGT_DIR"
cd "$SRC_DIR"

# CREATE THUMBNAILS

mkdir -p "${TGT_DIR}"
find . -type d -print0 | xargs -0 -I {} mkdir -p "$TGT_DIR/{}"

# create thumbs
eerr "$SRC_DIR: Creating image thumbnails ... "
find . \( \
    -iname "*.jpg"   -o \
    -iname "*.png"   -o \
    -iname "*.nef"   -o \
    -iname "*.cr2"   -o \
    -iname "*.jpeg"  -o \
    -iname "*.heic"  -o \
    -iname "*.gif"  -o \
    -iname "*.webp"     \
  \) \
  | parallel -qI {} \
    convert {} \
      -quality "$CONVERT_QUALITY" \
      -resize "${CONVERT_RESIZE}>" \
      -auto-orient \
      "$TGT_DIR/{.}.$CONVERT_OUTPUT_FORMAT"
eerr "done.\n"

# create thumb VIDEOS
# sources: https://stackoverflow.com/a/20848224, https://superuser.com/a/567934
SCALE_RESOLUTION="min($FFMPEG_SCALE_SIZE,iw)':'min($FFMPEG_SCALE_SIZE,ih)"
SCALE="scale='$SCALE_RESOLUTION':force_original_aspect_ratio=decrease"
PAD="pad=width='ceil(min(360,iw)/4)*4':height='ceil(min(360,ih)/4)*4'"

eerr "$SRC_DIR: Creating video thumbnails ... "
find . \( \
    -iname "*.mp4"   -o \
    -iname "*.avi"   -o \
    -iname "*.mov"   -o \
    -iname "*.mkv"      \
  \) \
  | parallel -qI {} \
    ffmpeg \
      -loglevel error \
      -i {} \
      -c:v $FFMPEG_OUTPUT_CODEC \
      -filter:v "$SCALE,$PAD" \
      "$TGT_DIR/{.}.mp4"
eerr "done.\n"

# sanity check
find . \( \
    -iname "*.jpg"   -o \
    -iname "*.nef"   -o \
    -iname "*.jpeg"  -o \
    -iname "*.heic"  -o \
    -iname "*.webp"     \
  \) | \
  while read a ; do
    file_base=${a%.*}
    if [[ ! -f "$TGT_DIR/${file_base}.$CONVERT_OUTPUT_FORMAT" ]] ; then
      echo "[WARNING] no thumb found for: $a"
    fi
  done

find . \( \
    -iname "*.mp4"   -o \
    -iname "*.avi"   -o \
    -iname "*.mov"   -o \
    -iname "*.mkv"      \
  \) \
  | while read a ; do
    file_base=${a%.*}
    if [[ ! -f "$TGT_DIR/${file_base}.mp4" ]] ; then
      echo "[WARNING] no thumb found for: $a"
    fi
  done


# remove empty dirs
find "$TGT_DIR/" -type d -empty -delete

# output thumbs dir name
echo "$TGT_DIR"
