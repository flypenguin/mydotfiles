#!/usr/bin/env bash

# directories that may not be symlinks and must be directories
# relative to $HOME
MUST_BE_DIR=".config .ssh/sockets .hammerspoon/Spoons"

# maybe ... change later.
DOTDIR="$HOME/.dotfiles"

# general purpose
TIMESTAMP="$(date +%Y%m%d.%H%M%S)"


print_help() {
  cat <<EOF

USAGE: $(basename $0) [-f]
       $(basename $0) -h

  -f : force. move away existing dotfiles to replace them with the
       versions from this repo

  -h : print help and exit

Without -h this script will:
  * update the git repos for vundle, etc.
  * re-construct the config files which may contain local changes
  * OPTIONAL: with -f backup pre-existing dotfiles (or remove links to them)
  * update all dotfile links

EOF
  exit 0
}


# ###########################################################################
# START


# check for help
[ "$1" == "-h" ] && print_help

set -euo pipefail
cd "$HOME"

git -C .dotfiles pull

# ensure MUST_BE_DIRs are actually directories :)
for dir in $MUST_BE_DIR ; do
  [[ ! -d "$dir" ]] && rm -f "$HOME/$dir"
  mkdir -p "$HOME/$dir"
done

# our private temp dir
mkdir -p "$DOTDIR/tmp"

# actually link dotfiles
STOW_LOG="$DOTDIR/logs/stow_$TIMESTAMP"
mkdir -p "$(dirname $STOW_LOG)"
echo -n " * Updating dotfiles ... "
stow -v \
  -t "$HOME" -d "$DOTDIR/dotfiles" --ignore="\.DS_.*" . \
  > "$STOW_LOG" 2>&1 \
  && echo "OK" \
  || echo "ERROR. See logs: $STOW_LOG"

# clean up
rm -rf "$DOTDIR/tmp"

export ANTIDOTE="$ZCACHEDIR/antidote/antidote.zsh"
if [[ -f "$ANTIDOTE" ]] ; then
    echo " * INFO: consider doing an 'antidote update' now."
fi
