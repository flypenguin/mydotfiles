#!/usr/bin/env bash

INTERNAL_DISPLAY="eDP.*"

DFILE=/tmp/displays
xrandr > $DFILE

#set -x

OUTPUTS=$(cat $DFILE  | grep -v disconnected | grep -Ev '^[[:space:]]' | cut -f1 -d " " | sort | grep -Ev "($INTERNAL_DISPLAY|Screen)")
INT_DISP=$(cat $DFILE | grep -v disconnected | grep -Ev '^[[:space:]]' | cut -f1 -d " " | sort | grep -E  $INTERNAL_DISPLAY)
DISDISPS=$(cat $DFILE | grep    disconnected | grep -Ev '^[[:space:]]' | cut -f1 -d " " | sort | grep -Ev $INTERNAL_DISPLAY)

echo "DISCONNECTED $DISDISPS"
echo "INTERNAL     $INT_DISP"
echo "OUTPUTS      $OUTPUTS"

set -e
set -x

# first step - disable all "disconnected" outputs
for OUT in $DISDISPS ; do
    xrandr --output $OUT --off
done

# now set the screen up
if [ "$1" == "docked" ]; then
    LAST=""
    for OUT in $OUTPUTS  ; do
        xrandr --output $OUT --auto $LAST
        LAST="--right-of $OUT"
    done
    for OUT in $INT_DISP ; do xrandr --output $OUT --off  ; done
elif [ "$1" == "solo" ]; then
    for OUT in $OUTPUTS  ; do xrandr --output $OUT --off  ; done
    for OUT in $INT_DISP ; do xrandr --output $OUT --auto ; done
elif [ "$1" == "presentation" ]; then
    for OUT in $INT_DISP ; do xrandr --output $OUT --auto ; done
    for OUT in $OUTPUTS  ; do xrandr --output $OUT --auto --same-as $INT_DISP ; done
elif [ "$1" == "all" ]; then
    LAST=""
    for OUT in $INT_DISP $OUTPUTS  ; do
        xrandr --output $OUT --auto $LAST
        LAST="--right-of $OUT"
    done
else
    cat <<EOF
USAGE: $(basename $0) <docked|free>
       docked - activates docked configuration without internal monitor
       solo   - activates solo configuration with only internal monitor
EOF
    exit -1
fi
